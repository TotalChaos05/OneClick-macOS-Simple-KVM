"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[489],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1397:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={title:"Apple-ID fixing"},p=void 0,s={unversionedId:"guide-Apple-ID",id:"guide-Apple-ID",title:"Apple-ID fixing",description:"1. If using virt-manager Use a random multicast MAC address generator and paste it into the template generated by make.sh.",source:"@site/docs/guide-Apple-ID.md",sourceDirName:".",slug:"/guide-Apple-ID",permalink:"/docs/guide-Apple-ID",draft:!1,editUrl:"https://github.com/notAperson535/OneClick-macOS-Simple-KVM/tree/docs/docs/guide-Apple-ID.md",tags:[],version:"current",frontMatter:{title:"Apple-ID fixing"},sidebar:"docs",previous:{title:"How to increase disk size",permalink:"/docs/guide-resizing"},next:{title:"Disabling Verbose (To make booting faster)",permalink:"/docs/guide-disabling-verbose"}},u={},c=[],m={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"If using virt-manager Use a random multicast ",(0,o.kt)("a",{parentName:"li",href:"https://www.hellion.org.uk/cgi-bin/randmac.pl"},"MAC address generator")," and paste it into the template generated by ",(0,o.kt)("inlineCode",{parentName:"li"},"make.sh"),". ")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"While I was editing the template, I also used ",(0,o.kt)("inlineCode",{parentName:"li"},"uuidgen")," and pasted that in there for good measure."),(0,o.kt)("li",{parentName:"ul"},"Then import the template with ",(0,o.kt)("inlineCode",{parentName:"li"},"virsh define whatever.xml"),".")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"In the macOS Finder, look for ",(0,o.kt)("strong",{parentName:"li"},"EFI")," in the left bar under ",(0,o.kt)("strong",{parentName:"li"},"Volumes"),". If it isn't visible you will have to mount it:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Open the macOS Terminal and type ",(0,o.kt)("inlineCode",{parentName:"li"},"diskutil list")," and look for the disk/partition location of the EFI. (There may be more than one.)"),(0,o.kt)("li",{parentName:"ul"},"Type ",(0,o.kt)("inlineCode",{parentName:"li"},"sudo diskutil mount diskYsZ"),", using the disk/partition location name where you see EFI. It should look like this:\n",(0,o.kt)("img",{parentName:"li",src:"https://user-images.githubusercontent.com/95918679/152873359-9f3586e9-32f7-411a-8fd7-25c80a94aeec.png",alt:"image"}))),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Download ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/corpnewt/GenSMBIOS"},"GenSMBIOS"),' and gernerate a set of serials for the mac model shown under "System Report", for example "iMacPro1,1".'),(0,o.kt)("li",{parentName:"ol"},"Locate the plist file at ",(0,o.kt)("inlineCode",{parentName:"li"},"/Volumes/EFI/OC/config.plist"),". Insert the generated serials into the apropiate places in that file. The correct places can be found ",(0,o.kt)("a",{parentName:"li",href:"https://dortania.github.io/OpenCore-Post-Install/universal/iservices.html#using-gensmbios"},"here")," You can edit it by hand or use ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/corpnewt/ProperTree"},"ProperTree")," for this."),(0,o.kt)("li",{parentName:"ol"},"Reboot. You should be able to log in with your Apple-ID now.")))}d.isMDXComponent=!0}}]);